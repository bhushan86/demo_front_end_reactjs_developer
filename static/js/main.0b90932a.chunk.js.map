{"version":3,"sources":["Widgets.js","HeaderOption.js","Header.js","Sidebar.js","InputOption.js","Post.js","firebase.js","Feed.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Widgets","newsArtical","heading","subtitle","className","HeaderOption","Avatar","Icon","title","src","Header","alt","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","avatar","Sidebar","recentItem","topic","InputOption","color","style","Post","name","description","message","photoUrl","ThumbUpAltlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Feed","useState","input","setInput","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","onclick","preventDefault","add","photoIUrl","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","App","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b90932a.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./widgets.css\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nfunction Widgets() {\r\n    const newsArtical=(heading,subtitle)=>(\r\n        <div className=\"widgets__article\">\r\n            <div className=\"widgets__articleLeft\">\r\n             <FiberManualRecordIcon/> \r\n            </div>  \r\n            <div className=\"widgets__articleRight\">\r\n                   <h4>{heading}</h4>\r\n                   <p>{subtitle}</p>\r\n             </div>\r\n            \r\n\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"widgets \">\r\n            <div className=\"widgets__header\">\r\n                <h2>Linkedin News</h2>\r\n                <InfoIcon/>\r\n\r\n            </div>\r\n            {newsArtical(\"Kerala floods: At least 19 dead and dozens missing in India \")}\r\n            {newsArtical(\"US eases Covid travel curbs from Nov 8; Here's what it means for fully vaccinated Indians \")}\r\n            {newsArtical(\"Suresh Raina To Be Dropped By CSK For IPL 2022, Ambati Rayudu, Faf du Plessis, and Dwayne Bravo To Be Targetted In The Mega Auction- Reports \")}\r\n            {newsArtical(\"Covid-19 vaccin for kids \")}\r\n            {newsArtical(\" Amozan copies items,rigs search1:Rpt \")}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import { Avatar} from '@material-ui/core'\r\nimport React from 'react'\r\nimport \"./HeadeOttion.css\"\r\n\r\nfunction HeaderOption\r\n({Avatar,Icon,title}) {\r\n    return (\r\n        <div className=\"headerOption\">\r\n           {Icon && <Icon className=\"headerOption__icon\"/>} \r\n           {Avatar && <Avatar className=\"headerOption__icon\" src={Avatar}/>\r\n           }\r\n           <h3 className=\"headerOption__title\">{title} </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderOption\r\n\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HeaderOption from './HeaderOption';\r\nimport HomeIcon from \"@material-ui/icons/Home\"\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            \r\n            <div className=\"header__left\">\r\n             <img src=\"/images/home.svg\" alt=\"icon\"/>\r\n             <div className=\"header__search\">\r\n             < SearchIcon />\r\n                <input type=\"text\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <HeaderOption Icon={HomeIcon} title=\"Home\"/>  \r\n                <HeaderOption  Icon={SupervisorAccountIcon}title=\"My Network\"/>  \r\n                <HeaderOption  Icon={BusinessCenterIcon}title=\" jobs\"/> \r\n                <HeaderOption  Icon={ChatIcon}title=\" Messaging\"/> \r\n                <HeaderOption  Icon={ NotificationsIcon}title=\" Notifaction\"/> \r\n                 <HeaderOption avatar=\"#\" title=\"Me\"/>\r\n               \r\n               \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport'./Sidebar.css'\r\nimport{Avatar} from \"@material-ui/core\"\r\n\r\nfunction Sidebar() {\r\n    const recentItem=(topic)=>(\r\n        <div className=\"sidebar__recentItem\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p>{topic}</p>\r\n\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"sidebar\">\r\n          <div className=\"sidebar__top\">\r\n               <img src=\"/images/card-bg .svg\" alt=\"\"/>\r\n               <Avatar className=\"sidebar__avatar\"/>\r\n               <h2>Bhushan Patil</h2>\r\n               <h4>bhushanvasantpatil@gmail.com</h4>\r\n          </div>\r\n            <div className=\"sidebar__stats\">\r\n                 <div className=\"sidebar__stat\">\r\n                     <p>Who viewed you</p>\r\n                     <p className=\"sidebar__statNumber\">2,543</p>\r\n                 </div>\r\n                 <div className=\"sidebar__stat\">\r\n                 <p>views on post</p>\r\n                     <p className=\"sidebar__statNumber\">2,442</p>\r\n                 </div>\r\n            </div>\r\n            <div className=\"sidebar__bottoon\">\r\n              <p>Recent</p>\r\n              {recentItem('recatjs')}\r\n                 {recentItem('programing')}\r\n                 {recentItem('softwareengineering')}\r\n                 {recentItem('design')}\r\n                 {recentItem('devloper')}\r\n                 \r\n                \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport'./InputOption.css';\r\n\r\nfunction InputOption({Icon,title,color}) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon style={{ color: color}}/>\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOption\r\n","import React from 'react';\r\nimport{Avatar}from\"@material-ui/core\";\r\nimport \"./Post.css\";\r\nimport InputOption from './InputOption';\r\nimport ThumbUpAltlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\r\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\n\r\n\r\n\r\nfunction Post({name ,description ,message,photoUrl}) {\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar/> \r\n                <div className=\"post__info\">\r\n                    <h2>{name}</h2>\r\n                   <p> {description}</p> \r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <p>{message}</p>\r\n\r\n            </div>\r\n            <div className=\"post__buttons\">\r\n                <InputOption Icon={ThumbUpAltlinedIcon} title=\"Like\" color=\"gray\"/>\r\n                <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\"/>\r\n                <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\"/>\r\n                <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\"/>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import firebase from \"firebase\"\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB9MXvJokxd37ISq_rlpbCTx1p0pzxPu-A\",\r\n  authDomain: \"linkedin-clone-ded66.firebaseapp.com\",\r\n  projectId: \"linkedin-clone-ded66\",\r\n  storageBucket: \"linkedin-clone-ded66.appspot.com\",\r\n  messagingSenderId: \"148303027885\",\r\n  appId: \"1:148303027885:web:201cf404066cec0ba6f024\",\r\n  measurementId: \"G-996157KLVX\"\r\n};\r\n  \r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db =firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export {db,auth};","import React,{useState,useEffect} from 'react'\r\nimport './Feed.css'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport InputOption from './InputOption';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport Post from './Post';\r\nimport{db} from \"./firebase\";\r\n\r\nimport firebase from 'firebase';\r\n\r\n\r\nfunction Feed() {\r\n    const[input,setInput]=useState(\"\");\r\n   const[posts,setPosts]= useState([]);\r\n   useEffect (()=>{\r\n          db.collection(\"posts\")\r\n          .orderBy(\"timestamp\",\"desc\")\r\n          .onSnapshot((snapshot )=> \r\n              setPosts(\r\n                  snapshot.docs.map((doc) =>({\r\n                      id:doc.id,\r\n                      data:doc.data(),\r\n                  }))\r\n                  )\r\n          );\r\n   },[]);\r\n   const sendPost = (e)=> {\r\n       e.preventDefault();\r\n       db.collection(\"posts\").add({\r\n           name :'Bhushan Patil',\r\n           description:'this is test',\r\n           message: input,\r\n           photoIUrl:\" \",\r\n           timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n\r\n       });\r\n       setInput(\"\");\r\n   };\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__inputContainer\">\r\n                <div className=\"feed__input\">\r\n                  < CreateIcon />\r\n               <form>\r\n                  <input   value={input} onChange ={(e)=> setInput(e.target.value)}\r\n                  type=\"text\"/>\r\n                  <button  onclick ={sendPost}type='submit'>Send</button>\r\n              </form>\r\n            </div>\r\n            <div className=\"feed__inputOption\">\r\n                    <InputOption Icon={ImageIcon} title=\"photo\" color=\"#70b5f9\"/>\r\n                    <InputOption Icon={ SubscriptionsIcon} title=\"Video\" color=\"#E7A33E\"/>\r\n                    <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#C0CBCD\"/>\r\n                    <InputOption Icon={CalendarViewDayIcon } title=\"Write aeticla\" color=\"#7FC15E\"/>\r\n            </div>\r\n            </div>\r\n           \r\n                <Post\r\n               name=\"Bhushan patil\"\r\n               description=\"this is a test\"\r\n               message=\"WOW this WORKED\"\r\n                />\r\n            \r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed \r\n","import React from 'react';\nimport Widgets from './Widgets';\nimport './App.css';\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport Feed from \"./Feed\";\nfunction App() {\n  return (\n    <div className=\"app\">\n    \n    <Header/>\n    <div className=\"app__body\">\n    <Sidebar/>\n    <Feed/>\n   < Widgets/>\n    </div>\n    \n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}